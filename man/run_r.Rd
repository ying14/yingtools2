% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yingtools2.R
\name{run_r}
\alias{run_r}
\alias{run_r_bg}
\alias{run_r_callargs}
\title{Evaluate expression in another R session}
\usage{
run_r(expr, envir = parent.frame())

run_r_bg(expr, envir = parent.frame())

run_r_callargs(expr, envir = parent.frame())
}
\arguments{
\item{expr}{expression to be run in separate R session.}

\item{envir}{the environment to execute the code.}
}
\value{
For \code{run_r}: the value of the evaluated expression.
For \code{run_r_bg}: an \code{r_process} object, which has a \code{get_result()} method to collect the result.
For \code{run_r_callargs}: a list containing a modified function and a list of arguments to pass to the function;
this is designed to be the arguments that can be plugged into \code{callr::r} or \code{callr::r_bg}.
}
\description{
Use these to run code in a separate instance of R, separate from your current console.
This is essentially doing what the \code{callr} package does, but just adds a few modifications to make it easier to use.
}
\details{
In some cases it is useful to run code in a separate R session... this is where functions from the \code{callr} package
come in handy, such as \code{r()} or \code{r_bg()}. However, in order to use these, you have to be sure to:
(1) place the code inside an anonymous function,
(2) refer to functions and variables explicitly from other packages using the :: notation,
(3) pass any necessary local variables as arguments to the anonymous function.
\code{run_r()} and \code{run_r_bg()} are running \code{callr::r()} and \code{callr::r_bg()}, except that you can
just insert the code without worrying about about the 3 modifications above.
}
