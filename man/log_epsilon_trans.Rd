% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yingtools2.R
\name{log_epsilon_trans}
\alias{log_epsilon_trans}
\title{Log Epsilon Tranformation}
\usage{
log_epsilon_trans(epsilon = 0.001)
}
\arguments{
\item{epsilon}{This parameter controls scaling. Think of this as the value of the first axis tick after zero. Default is 0.001.}
}
\value{
Tranformation function to be plugged into ggplot.
}
\description{
Use this transformation for plotting log data including 0. You can't use regular log transformation because it can't take zero.
}
\details{
The transformation used is y=log(x+epsilon/8)-log(epsilon/8), where epsilon is the parameter controlling the scale. The 1/8 portion is to make distances between ticks equal, so it's visually pleasing.
}
\examples{
values <- c(0,10^(-10:0))
d <- data.frame(x=1:length(values),y=values)
g <- ggplot(d,aes(x=x,y=y,label=y)) + geom_point() + geom_line() + geom_text()
g1 <- g + scale_y_continuous(breaks=values) + ggtitle("untransformed")
g2 <- g + scale_y_continuous(trans=log_epsilon_trans(0.0001)) + ggtitle("scale_trans, epsilon=0.0001")
g3 <- g + scale_y_continuous(trans=log_epsilon_trans(10^-6.)) + ggtitle("scale_trans, epsilon=0.0000001")
g4 <- g + scale_y_continuous(trans=log_epsilon_trans(10^-10)) + ggtitle("scale_trans, epsilon=0.0000000001")
gridExtra::grid.arrange(g1,g2,g3,g4,nrow=2)
}
\author{
Ying Taur
}
