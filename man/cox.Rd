% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yingtools2.R
\name{cox}
\alias{cox}
\title{Cox Proportional Hazard model}
\usage{
cox(
  data,
  yvar,
  ...,
  starttime = NULL,
  return.split.data = FALSE,
  return.model.obj = FALSE,
  firth = FALSE,
  do.competing = NULL,
  firth.opts = list(),
  formatted = TRUE
)
}
\arguments{
\item{data}{the data frame containing the variables to be analyzed.}

\item{yvar}{the time-to-event outcome (bare unquoted).}

\item{...}{predictors in the model (bare unquoted). If a predictor time-dependent, the split the corresonding rows of the data frame.}

\item{starttime}{optional parameter specifying analysis start time. Use this for left censoring.... no need to use it for setting time zero.}

\item{return.split.data}{if \code{TRUE}, returns the data frame after splitting rows that are time-dependent.}

\item{return.model.obj}{if \code{TRUE}, returns the model object of the \code{\link[survival:coxph]{survival::coxph()}} command}

\item{formatted}{returns a formatted regression table (default \code{TRUE}). Otherwise, return the raw, unformatted regression table (essentially, the output of \code{broom::tidy}, plus a few additional columns)}
}
\value{
by default, returns a formatted regression table
}
\description{
Run a Cox (or Fine-Gray) regression.
}
\examples{
# simple Cox proportional hazard
cid.patients \%>\% cox(dead,sex)

# Cox hazard with time-dependent covariates (metronidazole is time-dependent and contains metronidazole_day)
cid.patients \%>\% cox(enterodom30, metronidazole)

# make the data left-censored
cid.patients \%>\% cox(enterodom30, metronidazole, starttime=firstsampday)

# use firth=TRUE if monotone likelihood is suspected
cid.patients \%>\% cox(proteodom30,fluoroquinolone)
cid.patients \%>\% cox(proteodom30,fluoroquinolone,firth=TRUE)

# use options to extract data for other things like Kaplan-Meier
data4 <- cid.patients \%>\% cox(vre.bsi,enterodom30,return.split.data = TRUE)
model4 <- cid.patients \%>\% cox(vre.bsi,enterodom30,return.model.obj = TRUE)
fit4 <- survival::survfit(model4$formula,data=data4)
survminer::ggsurvplot(fit4,censor=FALSE,fun="event")
}
