% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/microbiota2.R
\name{calc.pairwise}
\alias{calc.pairwise}
\title{Calculate pairwise distances}
\usage{
calc.pairwise(
  sample1,
  sample2,
  method,
  phy,
  rarefy = FALSE,
  pct = FALSE,
  taxtree = FALSE,
  unfold = FALSE,
  mean = FALSE
)
}
\arguments{
\item{sample1}{1st vector of sample names to be compared}

\item{sample2}{2nd vector of sample names to be compared}

\item{method}{distance metric method. Passed to \code{\link[=calc.distance]{calc.distance()}}}

\item{phy}{phyloseq object containing data for samples listed in \code{sample1} and \code{sample2}.}

\item{rarefy}{if \code{TRUE}, will rarefy to even depth (\code{\link[phyloseq:rarefy_even_depth]{phyloseq::rarefy_even_depth()}})}

\item{pct}{if \code{TRUE}, will substitute relative abundances (\code{phyloseq::transform_sample_counts(phy, function(x) x / sum(x) )})}

\item{taxtree}{if \code{TRUE}, will substitute a taxonomy-based tree (\code{\link[=phy.use.tax.tree]{phy.use.tax.tree()}})}

\item{unfold}{if \code{TRUE}, will perform unfolding operation on the taxonomy structure (\code{\link[=phy.unfold.taxranks]{phy.unfold.taxranks()}})}

\item{mean}{if \code{TRUE}, will calculate distance after collapsing at each taxonomic level and obtaining the weighted average (\code{\link[=calc.mean.distance]{calc.mean.distance()}})}
}
\value{
a vector of calculated distances
}
\description{
For a given list of pairwise sample comparisons, calculate distance using \code{\link[=calc.distance]{calc.distance()}}.
}
\details{
This is similar to running \code{\link[=calc.distance]{calc.distance()}}, converting to pairwise form using \code{\link[=get.pairwise]{get.pairwise()}}.
However, this is useful if only a handful of pairwise comparisons are needed, and calculation of the entire distance matrix
would take too long. If that is the case, it will call \code{\link[=calc.distance]{calc.distance()}} for each individual comparison.
My testing suggests that individual pairwise calculation is about 130x slower. So if is the number of pairwise comparisons
is less than 1/130th of the size of the distance matrix, it will do individual calculation, otherwise it will calculate the whole matrix together.
}
