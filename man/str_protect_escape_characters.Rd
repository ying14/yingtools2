% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yingtools2.R
\name{str_protect_escape_characters}
\alias{str_protect_escape_characters}
\title{Protect escape characters in a regex text}
\usage{
str_protect_escape_characters(pattern)
}
\arguments{
\item{pattern}{the character pattern to be modified}
}
\description{
Fixes regex patterns prior to using them in a shiny context such as \code{regex.widget()}.
}
\details{
Sometimes when showing/interacting with regex character values to Shiny,
escape characters such as \verb{\\t}, \verb{\\r}, \verb{\\n}, or \verb{\\"} are stripped off,
which can break the patterns. This can be confusing because the patterns work
in R. Run this function to add backslashes, to guarantee that regex "sees" the backslashes.
}
\examples{
library(dplyr)
library(purrr)
library(stringr)
text <- c("abc", "'", "\t", "\n", "\r\n", "\"", "Ã„", "\\\\", "[", "(", "+", "?", "^", "\b")
re1 <- c("abc", "'", "\t", "\n", "\r\n", "\"", "\U00C4", "\\\\\\\\", "\\\\[", "\\\\(", "\\\\+", "\\\\?", "\\\\^", "\b")
re2 <- c("abc", "'", "\\\\t", "\\\\n", "\\\\r\\\\n", "\\\\\"", "\U00C4", "\\\\\\\\", "\\\\[", "\\\\(", "\\\\+", "\\\\?", "\\\\^", "\b")

tbl <- tibble(text,re1,re2) \%>\%
  mutate(re3=str_protect_escape_characters(re1),
         re12.diff=re1!=re2,
         re1.match=map2_lgl(text,re1,str_detect),
         re2.match=map2_lgl(text,re2,str_detect),
         re3.match=map2_lgl(text,re3,str_detect))
tbl
}
