% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/microbiota2.R
\name{get.tax.palette}
\alias{get.tax.palette}
\title{Create a color palette for taxonomy}
\usage{
get.tax.palette(data, unitvar = Species, tax.palette = yt.palette3)
}
\arguments{
\item{data}{taxonomic data, can be \code{\link[phyloseq:phyloseq-class]{phyloseq}}, \code{\link[=get.otu.melt]{get.otu.melt()}} data frame, or \code{\link[=get.tax]{get.tax()}} data frame.}

\item{unitvar}{the granular column (bare unquoted) by which colors will be assigned. Default is \code{Species}.
Sometimes you might want to switch to another granular identifer, such as \code{otu}. Depending on the situation.}

\item{tax.palette}{a list of formulas used to assign colors. Each element should take the form: \verb{"<label>" = <true/false expression> ~ <color vector>}. See examples and details.}
}
\value{
named vector of colors, which can be used in: \verb{ggplot( ... ) + scale_fill_manual(values = <pal> )}
}
\description{
Given microbiota data, generate a color palette that can be used in ggplot2 plots.
}
\details{
Note that the \code{tax.palette} formula list is evaluated in order, and should probably end in TRUE  (similar to \code{\link[dplyr:case_when]{dplyr::case_when()}}).
}
\examples{
# generate a stacked plot for one subject
otusub <- cid.phy \%>\% get.otu.melt() \%>\% filter(Patient_ID=="221") \%>\%
  arrange(!!!syms(rank_names(cid.phy))) \%>\%
  mutate(otu=fct_inorder(otu))
g <- ggplot(otusub,aes(x=day,y=pctseqs,fill=otu)) +
  geom_col(show.legend=FALSE,width=1) +
  expand_limits(x=50)
g

# use default bacterial palette (yt.palette3)
pal1 <- get.tax.palette(cid.phy,unitvar="otu")
legend1 <- get.tax.legend() \%>\%
  annotation_custom(xmin=30, xmax=50, ymin=0.7, ymax=1)
g + scale_fill_manual(values=pal1) + legend1

# generate a custom palette
custom_pal <- exprs(
  "Gram positives" = Phylum=="Firmicutes" ~ shades("purple",variation=0.25),
  "Gram negatives" = Phylum=="Bacteroidetes" | Phylum=="Proteobacteria" ~ shades("red",variation=0.25),
  "Others" = TRUE ~ shades("gray", variation=0.25)
)
pal2 <- get.tax.palette(cid.phy,unitvar="otu",tax.palette = custom_pal)
legend2 <- get.tax.legend(tax.palette = custom_pal) \%>\%
  annotation_custom(xmin=30, xmax=50, ymin=0.7, ymax=1)
g + scale_fill_manual(values=pal2) + legend2
}
