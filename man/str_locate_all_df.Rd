% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yingtools2.R
\name{str_locate_all_df}
\alias{str_locate_all_df}
\alias{str_find_overlaps_df}
\alias{str_sub_all_df}
\alias{str_sub_all_replace_df}
\alias{str_locs2df}
\alias{str_df2locs}
\alias{str_df2strlist}
\alias{str_df2irange}
\alias{str_irange2df}
\alias{str_find_gaps_df}
\title{Locate, Extract, and Replace Multiple Substrings}
\usage{
str_locate_all_df(string, ..., group_var = "group", ignore_case = TRUE)

str_find_overlaps_df(df, group_fun = NULL)

str_sub_all_df(df, string, var = "var")

str_sub_all_replace_df(string, df, newvar = "newvar")

str_locs2df(locs)

str_df2locs(df, string)

str_df2strlist(df, newvar = "newvar", string)

str_df2irange(df, string)

str_irange2df(irange)

str_find_gaps_df(df, string, pad = 0)
}
\arguments{
\item{string}{character vector to be searched/replaced}

\item{...}{regular expression patterns to be searched.
Can alternatively supply locations... list of matrices, corresponding to output from \code{\link[stringr:str_locate]{stringr::str_locate_all()}}.
Can be named, which will keep in a column (callled \code{group}) in data frame output.}

\item{df}{data frame containing location, plus/minus additional output.
Should contain columns: \code{i}, \code{start}, \code{end}, \code{group}, and may contain \code{var} and \code{newvar}.}

\item{var}{name of new column name to be added to \code{df} representing extracted substrings. Default is \code{"var"}.}

\item{newvar}{name of existing column name in \code{df} to be used as replacement. Default is \code{"newvar"}.}

\item{pad}{number of characters to pad each range by. Default is \code{0}}
}
\description{
A set of modified functions for searching and replacing using regular expressions.
\code{str_locate_all_df()} locates position of regex hits,
\code{str_find_overlaps_df()} finds overlapping start/end times and deals with them.
\code{str_sub_all_df()} extracts the hits,
\code{str_sub_all_replace_df()} replaces new text.
These use some functions used for conversion or manipulation:
\code{str_locs2df()} converts location data (list of matrices, output of \code{\link[stringr:str_locate]{stringr::str_locate_all()}}) to data frame.
\code{str_df2locs()} converts data frame to location data.
\code{str_df2strlist()} converts a column in data frame to character list (output of \code{\link[stringi:stri_sub_all]{stringi::stri_sub_all()}}).
\code{str_df2irange()} converts data frame to \code{IRanges} list.
\code{str_irange2df()} converts \code{IRanges} list to data frame.
\code{str_find_gaps_df()} returns the data frame representing all gaps.
}
\details{
The functions are meant to make manipulations easier, by storing results in a data frame rather than list of matrices, etc.
\code{str_locate_all_df()} is equivalent to \code{\link[stringr:str_locate]{stringr::str_locate_all()}}
\code{str_sub_all_df()} is equivalent to \code{\link[stringi:stri_sub_all]{stringi::stri_sub_all()}}
\code{str_sub_all_replace_df()} is equivalent to \code{\link[stringi:stri_sub_all]{stringi::stri_sub_all_replace()}}
}
\examples{
library(tidyverse)
text <- stringr::sentences[1:6]
re1 <- "birch|smooth|chicken"
re2 <- "lemons|punch"
re3 <- "the|mon|moo"
df <- str_locate_all_df(text,g1=re1,g2=re2,g3=re3) \%>\%
  str_find_overlaps_df(group_fun=~paste(.x,collapse="+")) \%>\%
  str_sub_all_df(text) \%>\%
  mutate(newvar=paste0("[##(",group,")",var,"##]"))
newtext <- str_sub_all_replace_df(text,df)
newtext
}
