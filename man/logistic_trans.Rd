% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yingtools2.R
\name{logistic_trans}
\alias{logistic_trans}
\title{Logistic Transformation}
\usage{
logistic_trans(value1, value2, pct.value1 = 0.1, pct.value2 = 0.9)
}
\arguments{
\item{value1}{First value whose percent height you'd like to specify.}

\item{value2}{Second value whose percent height you'd like to specify.}

\item{pct.value1}{Percent height of the first value. Default is 0.1.}

\item{pct.value2}{Percent height of the second value. Default is 0.9.}

\item{invert}{whether or not to flip the logistic curve. Default is \code{FALSE}.}
}
\value{
Returns the logistic transformation of \code{var}, where values will fall within \code{scale}, and where \code{inner.range} will be transformed to \code{percentiles}.
}
\description{
Performs logistic transformation of data. This is useful for graphing.
}
\details{
When graphing a continuous measure, this transformation is useful if you need to fit all values
into a particular space. You can play with parameters to get the transformation just how you want it.
}
\examples{
#Example: WBC. Values between 0.2 and 10 take up 80\% of the space. Values outside of that de-emphasized.
wbc <- seq(0,20,by=0.1)
wbc.logist <- trans.logistic(wbc,inner.range=c(0.2,10))
ggplot(data.frame(wbc,wbc.logist)) + geom_point(aes(x=wbc,y=wbc.logist))
data <- tibble(wbc=seq(0,20,by=0.01))
ggplot(data,aes(x=wbc,y=wbc)) + geom_point() + expand_limits(y=0) +
  scale_y_continuous("log-transformed wbc",trans=logistic_trans(.1,5),
                     breaks=c(0,0.5,1,5,20))
}
\author{
Ying Taur
}
