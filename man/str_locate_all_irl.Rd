% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yingtools2.R
\name{str_locate_all_irl}
\alias{str_locate_all_irl}
\alias{irl_pc}
\alias{irl_handle_overlaps}
\alias{irl_find_gaps}
\alias{irl_sort}
\alias{str_sub_all_replace_irl}
\alias{str_detect_irl}
\title{Locate Substrings and Store as \code{IRangesList}}
\usage{
str_locate_all_irl(string, pattern, ..., ignore_case = TRUE)

irl_pc(..., sort = FALSE)

irl_handle_overlaps(irl, ...)

irl_find_gaps(irl, string, pad = 0)

irl_sort(irl)

str_sub_all_replace_irl(irl, string, expr)

str_detect_irl(irl)
}
\arguments{
\item{string}{Character vector to be searched}

\item{pattern}{Regular expression pattern}

\item{...}{expressions that summarize metadata. These are like expressions in a \code{summarize()} statement.}

\item{ignore_case}{Whether or not to ignore case differences. Default is \code{TRUE}.}

\item{sort}{whether or not to sort after combining}

\item{irl}{\code{\link[IRanges:IRangesList-class]{IRangesList}} object.}

\item{pad}{number of characters to pad each \code{IRange} by. Default is \code{0}.}

\item{expr}{expression which generates the replacment string, where \code{x} can be used to represent the original hit, or any metadata in \code{irl}}
}
\value{
\code{\link[IRanges:IRangesList-class]{IRangesList}} object containing locations of regex search.

Single \code{\link[IRanges:IRangesList-class]{IRangesList}} object
}
\description{
Similar to \code{\link[stringr:str_locate]{stringr::str_locate_all()}}, but outputs an \code{\link[IRanges:IRangesList-class]{IRangesList}} object.

Combine multiple \code{\link[IRanges:IRangesList-class]{IRangesList}} objects into a
single \code{\link[IRanges:IRangesList-class]{IRangesList}} object.
}
\examples{
text <- stringr::sentences[1:6]
re1 <- "birch|smooth|chicken"
re2 <- "lemons|punch"
re3 <- "the|mon|moo"
irl1 <- str_locate_all_irl(text,re1,grp="g1")
irl2 <- str_locate_all_irl(text,re2,grp="g2")
irl3 <- str_locate_all_irl(text,re3,grp="g3")
hits <- irl_pc(irl1,irl2,irl3) \%>\%
  irl_handle_overlaps(grp=paste(grp,collapse="+"), type="hit")
gaps <- allhits \%>\% irl_find_gaps(text) \%>\%
  irl2df() \%>\% mutate(type="gap") \%>\% df2irl()
all <- irl_pc(hits,gaps,sort=TRUE)
}
