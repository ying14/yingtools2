% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yingtools2.R
\name{replace.grep}
\alias{replace.grep}
\title{Ying's Replace Grep}
\usage{
replace.grep(
  var,
  recodes,
  result.as.list = FALSE,
  replace.text = "",
  collapse.hits = "|",
  recode.hits = FALSE,
  ignore.case = TRUE,
  perl = TRUE,
  useBytes = TRUE
)
}
\arguments{
\item{var}{the character vector to be searched.}

\item{recodes}{a vector of regular expressions. Can be named or unnamed; if named, the names are the regular expression, and the value is the replacement text.}

\item{result.as.list}{if \code{TRUE}, returns a 2-vector list containing replaced text and text hits. Default is \code{FALSE}.}

\item{replace.text}{text to replace hits with. Default is \code{""}}

\item{collapse.hits}{the separator with which all hits are pasted together. If \code{NULL}, hits will remain as an uncollapsed list. Default is \code{"|"}. Note that this parameter is not relevant unless \code{result.as.list=TRUE}}

\item{recode.hits}{whether to recode the hits into the with the replacement. Default if \code{FALSE}. This is relevant if \code{result.as.list=TRUE}.}

\item{ignore.case}{whether or not to ignore case, passed to regular expression. Default is \code{TRUE}}

\item{perl}{whether to use perl-style regular expressions. Default is \code{TRUE}}

\item{useBytes}{logical. If TRUE the regex matching is done byte-by-byte rather than character-by-character. Avoids weird locale warnings. (see help for \code{grep})}
}
\value{
By default, returns \code{var}, but with all regular expression hits replaced. If \code{result.as.list=TRUE} is specified, the hits themselves are also returned, within a 2-vector list.
}
\description{
Perform multiple text replacements at once using regular expressions. Similar in form to \code{\link[=recode]{recode()}} and \code{\link[=recode.grep]{recode.grep()}}
}
